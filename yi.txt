git init //创建仓库
git add weijian.txt //把修改的内容添加暂存区
git commit —m "注释" //提交
git status //仓库的状态
git diff //修改了那写内容
git log  //查看历史版本
git reset --hard Head //回退命令
git rellog //所有命令
git reset --hard commit_id //切换到不同的版本
git checkout --weijian.txt   //撤销修改
git rm wweijian.txt //删除

建立远程库链接github

打开git bash here
cd ~/.ssh/
假如没有要新建，有就继续
git config --global user.name "duxiaobin"  

git config --global user.email "151683602217@163.com"

ssh-keygen -t rsa -C "15168302217@163.com"
得到id_rsa和id_rsa.pub

在默认用户admin文件下有ssh 文件填入相应地方

git remote add origin git@github.com:duxiaobin1/learngit.git；//github是服务器得名 duxiaobin1是操作名  learngit是库的名字
git push -u origin master //第一次把项目推送到远程分支
git push -u origin master //把项目推送到远程分支

git clone git@github.com:michaelliao/gitskills.git /从远程clone项目


创建分支
git branch feizhi //创建分支
git checkout feizhi //切换分支
git branch //查看当前分支
先切换到主干
git checkout master 
git merge feizhi
吧feizhi合并到主干

git branch -d feizhi
删除分支


查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。

标签

命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id；

git tag -a <tagname> -m "blablabla..."可以指定标签信息；

git tag -s <tagname> -m "blablabla..."可以用PGP签名标签；

命令git tag可以查看所有标签。

命令git push origin <tagname>可以推送一个本地标签；

命令git push origin --tags可以推送全部未推送过的本地标签；

命令git tag -d <tagname>可以删除一个本地标签；

命令git push origin :refs/tags/<tagname>可以删除一个远程标签。




